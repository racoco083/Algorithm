https://codeforces.com/problemset/problem/1102/B

// chk배열을 통해 같은 숫자가 K보다 크면 NO를 출력하고 그렇지 않으면
// vi에 값과 인덱스를 넣어서 값에 대해서 오름차순 정렬을 한다.
// c는 각 인덱스에 색깔을 컬러링 하는 배열로 첫 색깔부터 끝 색깔 까지
// c[vi[i].i]에 1부터 시작해서 1씩 증가시킨 값을 넣어주면 된다.
// 이 때 j가 K보다 커질 때가 있는데 이 때는 j를 다시 1로 만들어 주면 된다.
// 이렇게 하면 모든 K개의 색깔을 사용하면서, 같은 색깔 안에서 색깔들이
// 구분될 수 있다. if (maxV > K)가 아니면 항상 각 숫자들의 개수는 K와 같거나
// 작기 때문에 원형큐 방식으로 색깔을 넘버링 할 수 있다.

#include <iostream>
#include <algorithm>
using namespace std;
#define MAX 5001

class Vi {
public:
	int v, i;
	Vi(int _v, int _i) : v(_v), i(_i) {}
	Vi() {}
};

int N, K;
Vi vi[MAX];// value_index
int c[MAX];// coloring
int chk[MAX];

int max(int a, int b) {
	return a > b ? a : b;
}

bool cmp(const Vi& a, const Vi& b) {
	return a.v < b.v;
}

int main() {
	cin >> N >> K;
	int a;
	int maxV = 0;
	for (int i = 1; i <= N; i++) {
		cin >> a;
		vi[i] = Vi(a, i);
		chk[a]++;
		maxV = max(maxV, chk[a]);
	}
	if (maxV > K) cout << "NO" << '\n';
	else {
		cout << "YES" << '\n';
		sort(vi + 1, vi + 1 + N, cmp);
		for (int i = 1, j = 1; i <= N; i++) {
			c[vi[i].i] = j++;
			if (j > K) j = 1;
		}
		for (int i = 1; i <= N; i++) cout << c[i] << ' ';
	}
	return 0;
}