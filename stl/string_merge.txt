#include <iostream>
using namespace std;

int N;
char arr[10][100];
char tmp[10][100];

int min(int a, int b) {
	return a > b ? b : a;
}

void scpy(char* d, const char* s) {
	while (*s != 0) *d++ = *s++;
	*d = *s;
}

int slen(char* a) {
	int len = 0;
	while (*a != 0) a++, len++;
	return len;
}

int scmp(char* a, char* b) {
	int al = slen(a);
	int bl = slen(b);
	for (int i = 0; i < min(al, bl); i++) {
		if (a[i] < b[i]) return -1;
		else if (a[i] > b[i]) return 1;
	}
	if (al == bl) return 0;
	else if (al < bl) return -1;
	return 1;
}

void merge(int s, int e) {
	if (s < e) {
		int m = (s + e) / 2;
		int l = s, r = m + 1, f = s;
		// 분리
		merge(l, m);
		merge(r, e);
		// 정렬
		while (l <= m && r <= e) {
			if (scmp(arr[l], arr[r]) < 0) scpy(tmp[f++], arr[l++]);
			else scpy(tmp[f++], arr[r++]);
		}
		// 합병
		while (l <= m) scpy(tmp[f++], arr[l++]);
		while (r <= e) scpy(tmp[f++], arr[r++]);
		for (int i = s; i <= e; i++) {
			scpy(arr[i], tmp[i]);
		}
	}
}

int main() {
	cin >> N;
	for (int i = 0; i < N; i++) cin >> arr[i];
	merge(0, N - 1);
	for (int i = 0; i < N; i++)
		cout << arr[i] << ' ';
	return 0;
}
/*
9
qwert qwer qwert qwerfhfhfgh qasdf qzfds dfgds  qwerthfhfgh zfsda
*/