1-1. 인덱스 i<N인데 i<5로 쓰는 실수를 많이 한다 주의하자! => 색종이
1-2. 인덱스 i인데 다른 값을 넣는 실수를 하였다. => 퇴사
1-3. 인덱스 1부터 시작해야하는데 0부터 시작했다. => 인싸들의 가위바위보
1-4. dfs로 인덱스 넘길 때 y, x를 넘겨야 하는데 y+1, x+1을 넘겨 틀렸다. => Baduk2

2. 서로 영향 미치는 코드를 작성하여 여러번 틀렸다. => 뱀
3. 변수 재정의 하여 몇 번 틀렸다. => 뱀
4. 답이 ll인데 int로 하여 틀렸다. => 시험 감독
5. int a=3, b=4하고 ceil(a/b)하면 원하는 값을 못 얻는다.
왜냐하면 a와 b는 int형이라 int형으로 처리된 결과가 나온다.
답은 1인데 0이 나온다. a와 b의 자료형을 double로 바꾸면 해결된다.
=> 시험감독
6.  mxv값이 음일 수 있다. 초기화를 0으로 하면 음수가 최대값일 때
이걸 못 구한다. mxv = -INF로 초기화 해주어야 한다. => 연산자 끼워넣기

7. 비교대상이 되는 자료구조를 만들어 놓고 초기 자료구조를 사용하였다.
area <-> gta => maze

8. 2차원 배열area를 90도씩 회전시켜 다음에 90도가 돌면 180도가
되도록 하기 위해 area위치도 다 옮겨주어야 하는데 그러지 않았다.
=> Maze 

9. bfs돌리기 전에 visited 초기화 안 시켰다. => Baduk2

10. 회전하면서 cy값은 기준이 되는 값인데 변경시켜 회전시킨 뒤에도
변경된 cy값을 사용하도록 하였다. =>감시

11. ret는 계속 값을 받는데 한 번이라도 true를 받으면 그 값을
저장해 놓아야 한다. 그런데 true를 받고도 false가 넘어오면 ret는
false 갱신되도록 해서 틀렸다. => 점령지 확장

12. 현재 2차원 배열의 값을 수정하면 수정되면서 다른 값에 영향을
줄 수 있으므로 next같은 배열에 저장해 놓았다가 다 끝나면
next값을 area에 복사하자

13. dfs하다가 stack overflow나면 기저사례에 return;
안 넣었을 확률 99%