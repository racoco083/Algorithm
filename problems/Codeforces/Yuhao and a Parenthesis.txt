https://codeforces.com/problemset/problem/1097/C

#include <iostream>
#include <string>
#include <map>
using namespace ::std;

string str;
map< int, int >mp;

int min(int a, int b) {
	return a > b ? b : a;
}

int main(){
	int test, n;
	cin >> n;
	int res(0);

	while (n--){
		cin >> str;
		int q(0), r(0);
		for (auto ch : str) (ch == '(') ? q++ : q--, r = min(r, q);
		if (r < 0 and r < q) continue;
		// 뭐지 이거 개쩌네...
		if (mp[-q]) ++res, mp[-q]--;
		else mp[q]++;
	}
	cout << res;
}
// (())) YES
// ((()) YES
// ))((( NO
// )))(( NO
// )()() YES
// )()( NO
// ()()( YES
// (()( 이런 경우도 r이 q보다 작다.
// 안정적이라는 것은 내가 정의한 건데 괄호가 열리고 닫히는 것이 딱 맞아 떨어진다는 얘기이다.
// r이 0보다 크다는 것은 안정적이던가 한쪽만 열려있다는 소리이다.
// r이 0보다 작다는 것은 괄호 개수를 셀 때 닫는괄호가 더많을 때가 있다는것이다.
// r과 q가 같다는 것은 현재 괄호가 안정적이던가 닫힌쪽으로 시작해서 한쪽만 열려있다는 소리이다.
// 닫힌괄호로 시작해서 맨 오른쪽을 열리게 하지 않으려면 r과 q가 같아야 하는데 r이 q보다 작으면 맨 오른쪽이 열려 있다는 뜻이다.
// q가 r 보다 클 때만 매칭되지 않는 괄호가 될 수 있는데 r이 0이면 r<q 조건을 만족해도 닫힌괄호로 시작하지 않는다는 의미이고 닫힌 괄호로
// 시작하려면 r이 0보다 작으면 된다. 그래서 r이 0보다 작으면서 q보다도 작으면 매칭되지 않는 문자열 괄호가 되는 것이다.
// "())(" 이 조건에서 ()이건 안정성 있으니 무시되고 )( 이것만 보게 된다. 닫힌괄호로 시작했고 오른쪽이 열려있다.
// r이 q보다 클 수는 없다.
